Chapter 1.

1.13 
The issue of resource utilization shows up in different forms in different types of operating systems. List what resources must be managed carefully in the following settings:

a. Mainframe or minicomputer systems
b. Workstations connected to servers
c. Mobile computers

Ans:
a. Mainframe or minicomputer systems: CPU resources, memory, storage, and network bandwidth.
b. Workstations connected to servers: CPU resources & memory
c. Mobile computers:

1.19 
What is the purpose of interrupts? How does an interrupt differ from a trap? Can traps be generated intentionally by a user program? If so, for what purpose? 

Ans:
Interrupt is generated by hardware, in order to change the flow in the system. An interrupt handler will be asked to deal with the cause of interrupt. Interrupt can be used to identify that I/O is completed or not to avoid the the need of device polling; on the other hand, trap is software-generated interrupt, which can be used to call OS routines or to catch the arithmetic errors.

1.21 
Some computer systems do not provide a privileged mode of operation in hardware. Is it possible to construct a secure operating system for these computer systems? Give arguments both that it is and that it is not possible.

Ans:
This kind of machine needs to keep the monitor mode all the times. It could be achieve with following two methods:

a. Using software interrupt for all user program. The software interrupt can provide what the hardware cannot provide in this type of system.

b. Make sure that all the programs are coded in high-level languages and let the compiler generate the object code. The compiler can provide the protection checks that the hardware is missing in this case.

1.27 
Describe some of the challenges of designing operating systems for mobile devices compared with designing operating systems for traditional PCs.

Ans:
The main challenges for designing OS for mobile devices include:

- There is less storage in mobile device than in traditional PC, which means OS on mobile device must control and manage their memory carefully.

- Since the power is limited on mobile devices, OS on mobile device needs to manage the power consumption carefully.

- Lower processing power and fewer processors means that OS on mobile device needs to manage the processing resources for applications on the device carefully.

Chapter 2.

2.13
Describe three general methods for passing parameters to the operating system.

Ans:
a. Pass the parameters into registers
b. Register can also pass the address of blocks containing parameters
c. Parameters can be pushed to the stack by the program and be popped off by the OS.

2.16 
What are the advantages and disadvantages of using the same system call interface for manipulating both files and devices?

Ans:
The advantage of using same system call interface for manipulating both files and devices is that it can benefit both user program code and also device-driver code. Since every device can be reached like it was a file in the file system and most of the kernel manage the devices through the file interface, which would be easier to add new device driver by implementing the hardware-specific code to support the abstraction file interface. For user program part, we can write user program code easily to access the devices and files in the same way; for device-driven part, the code can be written to be well compatible with API.
However, the disadvantage of using the same interface is that it would be hard to get the functionality of some devices which is in the context of file access API. As a result, there would be functional loss or performance loss. Some of the consequences can be overcome by the ioctl operation, which provides some general interface for process to invoke the device operations.


2.23 
How are iOS and Android similar? How are they different? 

Ans:
Similarities:
- Both are based on existing kernel (linux & Mac OS X)
- Both use software stack in their architecture.
- Both provide some frameworks and tools for developers.

Differences:
- Android is open-source, but iOS is close-source.
- Android is developed in Java, but iOS is implemented in Objective-C.
- Android runs on virtual machine, but iOS is built-in and runs native codes.

2.24 
Explain why Java programs running on Android systems do not use the standard Java API and virtual machine.

Ans:
Since standard Java API and virtual machine is designed for desktop and sever system, so Android cannot use them on the mobile devices. However, Google developed some specific API and virtual machine for mobile devices.
